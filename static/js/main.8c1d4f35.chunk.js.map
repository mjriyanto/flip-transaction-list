{"version":3,"sources":["redux/transaction/constants.js","utils/index.js","redux/transaction/reducer.js","redux/rootReducer.js","redux/store.js","redux/transaction/action.js","components/Search.js","components/Filter.js","components/List.js","assets/flip.png","components/Loader.js","pages/TransactionList/index.js","components/Header.js","components/Card.js","components/Button.js","pages/DetailTransaction/index.js","pages/NotFound/index.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["HANDLE_STATE_TRANSACTION_LIST","FETCH_TRANSACTION_LIST","FETCH_TRANSACTION_LIST_SUCCESS","FETCH_TRANSACTION_LIST_FAILURE","FILTER_BY_VALUE","SORT_DATA_LIST","formatCurrency","value","string","toString","sisa","length","rupiah","substr","ribuan","match","join","formatDate","date","split","year","parseInt","month","day","countTotal","total","map","val","amount","sortAsc","arr","field","sort","a","b","sortDesc","initialState","loading","transactions","filteredTransactions","error","search","reducer","state","action","type","types","payload","toLowerCase","filter","trans","beneficiary_name","includes","beneficiary_bank","sender_bank","sortedArr","utils","rootReducer","combineReducers","transaction","store","createStore","composeWithDevTools","applyMiddleware","thunk","fetchTransactionRequest","fetchTransactionSuccess","fetchTransactionFailure","StyledSearch","styled","div","Search","onChange","className","placeholder","e","target","StyledFilter","Filter","onSelect","href","onClick","StyledList","props","success","upsender","upbenef","List","id","benef_bank","receiver","status","onDetail","StyledLoader","Loader","src","flip","alt","TransactionList","useSelector","dispatch","useDispatch","history","useHistory","push","useEffect","axios","get","then","response","Object","keys","data","key","catch","message","handleState","filterByValue","sortByName","trf","completed_at","StyledHeader","Header","StyledCard","Card","account_number","unique_code","remark","created_at","StyledButton","button","Button","getBack","DetailTransaction","useState","setData","useParams","NotFound","style","textDecoration","cursor","Container","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c1d4f35.chunk.js","sourcesContent":["export const HANDLE_STATE_TRANSACTION_LIST = 'HANDLE_STATE_TRANSACTION_LIST';\r\nexport const FETCH_TRANSACTION_LIST = 'FETCH_TRANSACTION_LIST';\r\nexport const FETCH_TRANSACTION_LIST_SUCCESS = 'FETCH_TRANSACTION_LIST_SUCCESS';\r\nexport const FETCH_TRANSACTION_LIST_FAILURE = 'FETCH_TRANSACTION_LIST_FAILURE';\r\nexport const FILTER_BY_VALUE = 'FILTER_BY_VALUE';\r\nexport const SORT_DATA_LIST = 'SORT_DATA_LIST';\r\n","// Formatting Rp currency\r\nexport const formatCurrency = (value) => {\r\n  let string = value.toString();\r\n  let sisa = string.length % 3;\r\n  let rupiah = string.substr(0, sisa);\r\n  let ribuan = string.substr(sisa).match(/\\d{3}/g);\r\n\r\n  if (ribuan) {\r\n    let separator = sisa ? '.' : '';\r\n    return (rupiah += separator + ribuan.join('.'));\r\n  }\r\n};\r\n\r\n// Formatting Indonesian date\r\nexport const formatDate = (value) => {\r\n  let string = value.toString();\r\n  let date = string.split(' ')[0];\r\n  let year = parseInt(date.split('-')[0]);\r\n  let month = parseInt(date.split('-')[1] - 1);\r\n  let day = parseInt(date.split('-')[2]);\r\n\r\n  const months = [\r\n    'Januari',\r\n    'Februari',\r\n    'Maret',\r\n    'April',\r\n    'Mei',\r\n    'Juni',\r\n    'Juli',\r\n    'Agustus',\r\n    'September',\r\n    'Oktober',\r\n    'November',\r\n    'Desember',\r\n  ];\r\n\r\n  let newDate = `${day.toString()} ${months[\r\n    month\r\n  ].toString()} ${year.toString()}`;\r\n  return newDate;\r\n};\r\n\r\n// Counting sum of amount\r\nexport const countTotal = (value) => {\r\n  let total = 0;\r\n  value.map((val) => {\r\n    return (total += val.amount);\r\n  });\r\n  return total;\r\n};\r\n\r\n// Sorting\r\nexport const sortAsc = (arr, field) => {\r\n  return arr.sort(function (a, b) {\r\n    if (a[field] > b[field]) {\r\n      return 1;\r\n    }\r\n    if (b[field] > a[field]) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortDesc = (arr, field) => {\r\n  return arr.sort(function (a, b) {\r\n    if (a[field] > b[field]) {\r\n      return -1;\r\n    }\r\n    if (b[field] > a[field]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n","import * as types from './constants';\r\nimport * as utils from '../../utils/';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  transactions: [],\r\n  filteredTransactions: [],\r\n  error: '',\r\n  search: '',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.HANDLE_STATE_TRANSACTION_LIST:\r\n      return {\r\n        ...state,\r\n        [action.field]: action.value,\r\n      };\r\n    case types.FETCH_TRANSACTION_LIST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case types.FETCH_TRANSACTION_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload,\r\n        filteredTransactions: action.payload,\r\n        error: '',\r\n      };\r\n    case types.FETCH_TRANSACTION_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        transactions: [],\r\n        filteredTransactions: [],\r\n        error: action.payload,\r\n      };\r\n    case types.FILTER_BY_VALUE:\r\n      let value = action.value.toLowerCase();\r\n      let filteredTransactions = state.transactions.filter((trans) => {\r\n        return (\r\n          trans.beneficiary_name.toLowerCase().includes(value) ||\r\n          trans.beneficiary_bank.toLowerCase().includes(value) ||\r\n          trans.sender_bank.toLowerCase().includes(value)\r\n        );\r\n      });\r\n      return {\r\n        ...state,\r\n        filteredTransactions,\r\n      };\r\n    case types.SORT_DATA_LIST:\r\n      let sortedArr =\r\n        action.value === 'asc'\r\n          ? utils.sortAsc(state.filteredTransactions, 'beneficiary_name')\r\n          : action.value === 'desc'\r\n          ? utils.sortDesc(state.filteredTransactions, 'beneficiary_name')\r\n          : action.value === 'dateAsc'\r\n          ? utils.sortAsc(state.filteredTransactions, 'created_at')\r\n          : utils.sortDesc(state.filteredTransactions, 'created_at');\r\n      return {\r\n        ...state,\r\n        filteredTransactions: sortedArr,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport transaction from './transaction/reducer';\r\n\r\nconst rootReducer = combineReducers({ transaction });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import * as types from './constants';\r\nimport axios from 'axios';\r\n\r\nexport const fetchTransaction = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchTransactionRequest());\r\n    axios\r\n      .get('https://nextar.flip.id/frontend-test')\r\n      .then((response) => {\r\n        const transactions = Object.keys(response.data).map((key) => {\r\n          return response.data[key];\r\n        });\r\n        dispatch(fetchTransactionSuccess(transactions));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchTransactionFailure(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchTransactionRequest = () => {\r\n  return {\r\n    type: types.FETCH_TRANSACTION_LIST,\r\n  };\r\n};\r\n\r\nexport const fetchTransactionSuccess = (transactions) => {\r\n  return {\r\n    type: types.FETCH_TRANSACTION_LIST_SUCCESS,\r\n    payload: transactions,\r\n  };\r\n};\r\n\r\nexport const fetchTransactionFailure = (error) => {\r\n  return {\r\n    type: types.FETCH_TRANSACTION_LIST_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const handleState = (field, value) => {\r\n  return {\r\n    type: types.HANDLE_STATE_TRANSACTION_LIST,\r\n    field,\r\n    value,\r\n  };\r\n};\r\n\r\nexport const filterByValue = (value) => {\r\n  return {\r\n    type: types.FILTER_BY_VALUE,\r\n    value,\r\n  };\r\n};\r\n\r\nexport const sortByName = (value) => {\r\n  return {\r\n    type: types.SORT_DATA_LIST,\r\n    value,\r\n  };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSearch = styled.div`\r\n  width: 100%;\r\n  border: 1px solid #e0e0e0;\r\n  i {\r\n    position: absolute;\r\n  }\r\n  .icon {\r\n    color: #e0e0e0;\r\n    min-width: 30px;\r\n    padding: 10px;\r\n  }\r\n  .input-field {\r\n    border: none;\r\n    color: #9e9e9e;\r\n    font-size: 14px;\r\n    padding: 10px 40px;\r\n    width: 100%;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n    @media screen and (max-width: 480px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Search = ({ onChange, state }) => {\r\n  return (\r\n    <StyledSearch>\r\n      <i className=\"fa fa-search icon\"></i>\r\n      <input\r\n        type=\"text\"\r\n        value={state.search}\r\n        className=\"input-field\"\r\n        placeholder=\"Cari nama atau bank\"\r\n        onChange={(e) => onChange('search', e.target.value)}\r\n      />\r\n    </StyledSearch>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFilter = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  .dropbtn {\r\n    background-color: #fff;\r\n    border: 1px solid #e0e0e0;\r\n    color: #000000;\r\n    cursor: pointer;\r\n    font-size: 13px;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    padding: 10px;\r\n    .arrow {\r\n      color: #fd6542;\r\n    }\r\n    @media screen and (max-width: 480px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  .dropdown-content {\r\n    background-color: #fff;\r\n    display: none;\r\n    font-size: 13px;\r\n    min-width: 160px;\r\n    position: absolute;\r\n    z-index: 1;\r\n    a {\r\n      color: #000;\r\n      padding: 10px;\r\n      text-decoration: none;\r\n      display: block;\r\n      &:hover {\r\n        background-color: rgba(253, 101, 66, 0.1);\r\n      }\r\n    }\r\n    @media screen and (max-width: 480px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  &:hover {\r\n    .dropdown-content {\r\n      display: block;\r\n    }\r\n    .dropbtn {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Filter = ({ onSelect }) => {\r\n  return (\r\n    <StyledFilter>\r\n      <button className=\"dropbtn\">\r\n        Urutkan&emsp;<span className=\"arrow\">&#10597;</span>\r\n      </button>\r\n      <div className=\"dropdown-content\">\r\n        <a href=\"#\" onClick={() => onSelect('asc')}>\r\n          Nama A-Z\r\n        </a>\r\n        <a href=\"#\" onClick={() => onSelect('desc')}>\r\n          Nama Z-A\r\n        </a>\r\n        <a href=\"#\" onClick={() => onSelect('dateAsc')}>Tanggal terbaru</a>\r\n        <a href=\"#\" onClick={() => onSelect('dateDesc')}>Tanggal terlama</a>\r\n      </div>\r\n    </StyledFilter>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledList = styled.div`\r\n  background-color: #fff;\r\n  border: none;\r\n  border-left: ${(props) =>\r\n    props.success ? '4px solid #56b586' : '4px solid #fd6542'};\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  line-height: 1.8em;\r\n  margin-bottom: 15px;\r\n  padding: 10px 25px;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  .flex-list-container {\r\n    display: flex;\r\n    .content {\r\n      width: 75%;\r\n      .bank {\r\n        font-weight: 600;\r\n        .sender {\r\n          text-transform: ${(props) =>\r\n            props.upsender ? 'uppercase' : 'capitalize'};\r\n        }\r\n        .benef {\r\n          text-transform: ${(props) =>\r\n            props.upbenef ? 'uppercase' : 'capitalize'};\r\n        }\r\n      }\r\n      .name {\r\n        text-transform: uppercase;\r\n      }\r\n    }\r\n    .status {\r\n      width: 25%;\r\n      align-self: center;\r\n      text-align: center;\r\n      .tag {\r\n        background-color: ${(props) => (props.success ? '#56b586' : '#fff')};\r\n        border: ${(props) => (props.success ? '1px solid #56b586' : '1px solid #fd6542')};\r\n        border-radius: 5px;\r\n        color: ${(props) => (props.success ? '#fff' : '#222')};\r\n        font-size: 12px;\r\n        padding: 0 3px;\r\n\r\n        @media screen and (min-width: 480px) {\r\n          font-size: 14px;\r\n          width: 80%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding: 10px 15px;\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst List = ({\r\n  id,\r\n  sender_bank,\r\n  benef_bank,\r\n  receiver,\r\n  status,\r\n  amount,\r\n  date,\r\n  onDetail,\r\n}) => {\r\n  if (id) {\r\n    return (\r\n      <StyledList\r\n        success={status === 'SUCCESS' ? true : false}\r\n        upsender={sender_bank.length < 6 ? true : false}\r\n        upbenef={benef_bank.length < 6 ? true : false}\r\n        onClick={() => onDetail(id)}\r\n      >\r\n        <div className=\"flex-list-container\">\r\n          <div className=\"content\">\r\n            <p className=\"bank\">\r\n              <span className=\"sender\">{sender_bank}</span>&nbsp; &#8594; &nbsp;\r\n              <span className=\"benef\">{benef_bank}</span>\r\n            </p>\r\n            <p className=\"name\">{receiver}</p>\r\n            <p className=\"nominal\">\r\n              {`Rp${amount}`} &nbsp;&bull;&nbsp;{' '}\r\n              <span className=\"date\">{date}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"status\">\r\n            <div className=\"tag\">\r\n              {status === 'SUCCESS' ? 'Berhasil' : 'Pengecekan'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </StyledList>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nexport default List;\r\n","export default __webpack_public_path__ + \"static/media/flip.8702b644.png\";","import styled from 'styled-components';\r\nimport flip from '../assets/flip.png';\r\n\r\nconst StyledLoader = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  img {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <StyledLoader>\r\n      <img src={flip} alt=\"flip\" />\r\n    </StyledLoader>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  fetchTransaction,\r\n  handleState,\r\n  filterByValue,\r\n  sortByName,\r\n} from '../../redux/transaction/action';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { formatCurrency, formatDate, countTotal } from '../../utils/';\r\n\r\nimport Search from '../../components/Search';\r\nimport Filter from '../../components/Filter';\r\nimport List from '../../components/List';\r\nimport Loader from '../../components/Loader';\r\nimport '../index.scss';\r\n\r\nconst TransactionList = () => {\r\n  const state = useSelector((state) => state.transaction);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onChange = (field, value) => {\r\n    dispatch(handleState(field, value));\r\n    dispatch(filterByValue(value));\r\n  };\r\n\r\n  const onSelect = (value) => {\r\n    dispatch(sortByName(value));\r\n  };\r\n\r\n  const onDetail = (value) => {\r\n    history.push(`transaction/${value}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTransaction());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {state && !state.loading ? (\r\n        <div>\r\n          <div>\r\n            <p className=\"header\">Daftar Transaksi</p>\r\n            <p className=\"subheader\">Halo kak!</p>\r\n            <p className=\"text\">\r\n              Kamu telah melakukan transaksi sebesar{' '}\r\n              <span className=\"currency\">{`Rp${\r\n                countTotal(state.filteredTransactions)\r\n                  ? formatCurrency(countTotal(state.filteredTransactions))\r\n                  : 0\r\n              }`}</span>{' '}\r\n              sejak menggunakan Flip.\r\n            </p>\r\n          </div>\r\n          <div className=\"flex-search-container\">\r\n            <div className=\"search\">\r\n              <Search onChange={onChange} state={state} />\r\n            </div>\r\n            <div className=\"filter\">\r\n              <Filter onSelect={onSelect} />\r\n            </div>\r\n          </div>\r\n          {state.filteredTransactions &&\r\n            state.filteredTransactions.map((trf) => (\r\n              <List\r\n                key={trf.id}\r\n                id={trf.id}\r\n                sender_bank={trf.sender_bank}\r\n                benef_bank={trf.beneficiary_bank}\r\n                receiver={trf.beneficiary_name}\r\n                status={trf.status}\r\n                onDetail={onDetail}\r\n                amount={formatCurrency(trf.amount)}\r\n                date={formatDate(trf.completed_at)}\r\n                success\r\n              />\r\n            ))}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  line-height: 1.5em;\r\n\r\n  .flex-header-container {\r\n    display: flex;\r\n    .id {\r\n      align-self: center;\r\n      width: 75%;\r\n      p {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n    .status {\r\n      width: 25%;\r\n      align-self: center;\r\n      text-align: center;\r\n      .tag {\r\n        background-color: ${(props) => (props.success ? '#56b586' : '#fff')};\r\n        border: ${(props) => (props.success ? '1px solid #56b586' : '1px solid #fd6542')};\r\n        border-radius: 5px;\r\n        color: ${(props) => (props.success ? '#fff' : '#222')};\r\n        font-size: 12px;\r\n        padding: 0 3px;\r\n\r\n        @media screen and (min-width: 480px) {\r\n          font-size: 14px;\r\n          width: 80%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 480px) {\r\n    line-height: 1.8em;\r\n  }\r\n`;\r\n\r\nconst Header = ({ id, status }) => {\r\n  return (\r\n    <StyledHeader success={status === 'SUCCESS' ? true : false}>\r\n      <div className=\"flex-header-container\">\r\n        <div className=\"id\">\r\n          <p>{`ID TRANSAKSI: #${id}`}</p>\r\n        </div>\r\n        <div className=\"status\">\r\n          <div className=\"tag\">\r\n            {status === 'SUCCESS' ? 'Berhasil' : 'Pengecekan'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledCard = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  line-height: 1.5em;\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n\r\n  .flex-header-container {\r\n    display: flex;\r\n    .icon {\r\n      display: none;\r\n\r\n      @media screen and (min-width: 480px) {\r\n        display: inline-block;\r\n        width: 15%;\r\n        padding: 10px;\r\n        text-align: center;\r\n\r\n        i {\r\n          font-size: 3em;\r\n          color: #fd6542;\r\n        }\r\n      }\r\n    }\r\n    .detail {\r\n      font-size: 13px;\r\n      width: 85%;\r\n      padding: 10px;\r\n      .section {\r\n        margin-bottom: 20px;\r\n        line-height: 1.6em;\r\n        .title {\r\n          font-weight: 600;\r\n          text-transform: uppercase;\r\n        }\r\n        .sender {\r\n          text-transform: ${(props) =>\r\n            props.upsender ? 'uppercase' : 'capitalize'};\r\n        }\r\n        .beneficiary {\r\n          text-transform: ${(props) =>\r\n            props.upbenef ? 'uppercase' : 'capitalize'};\r\n        }\r\n        .remark {\r\n          text-transform: capitalize;\r\n        }\r\n      }\r\n      @media screen and (min-width: 480px) {\r\n        width: 100%;\r\n        font-size: 15px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Card = ({\r\n  sender_bank,\r\n  beneficiary_bank,\r\n  account_number,\r\n  beneficiary_name,\r\n  amount,\r\n  unique_code,\r\n  remark,\r\n  created_at,\r\n}) => {\r\n  return (\r\n    <StyledCard\r\n      upsender={sender_bank.length < 6 ? true : false}\r\n      upbenef={beneficiary_bank.length < 6 ? true : false}\r\n    >\r\n      <div className=\"flex-header-container\">\r\n        <div className=\"icon\">\r\n          <i className=\"fa fa-inbox\"></i>\r\n        </div>\r\n        <div className=\"detail\">\r\n          <div className=\"section\">\r\n            <p className=\"title\">Pengirim</p>\r\n            <p className=\"sender\">{sender_bank}</p>\r\n          </div>\r\n          <div className=\"section\">\r\n            <p className=\"title\">Penerima</p>\r\n            <p className=\"beneficiary\">{beneficiary_bank}</p>\r\n            <p>{account_number}</p>\r\n            <p>{beneficiary_name}</p>\r\n          </div>\r\n          <div className=\"section\">\r\n            <p className=\"title\">Nominal</p>\r\n            <p>{`Rp${amount}`}</p>\r\n            <p>\r\n              <b>Kode Unik : </b>\r\n              {unique_code}\r\n            </p>\r\n          </div>\r\n          <div className=\"section\">\r\n            <p className=\"title\">Catatan</p>\r\n            <p className=\"remark\">{remark}</p>\r\n          </div>\r\n          <div className=\"section\">\r\n            <p className=\"title\">Waktu Dibuat</p>\r\n            <p>{created_at}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  background: none;\r\n  border: 1px solid #fd6542;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  color: #fd6542;\r\n  padding: 8px 15px;\r\n\r\n  &:hover {\r\n    background: #fd6542;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Button = ({ getBack }) => {\r\n  return <StyledButton onClick={() => getBack()}>Kembali</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { formatCurrency, formatDate } from '../../utils/';\r\n\r\nimport Header from '../../components/Header';\r\nimport Card from '../../components/Card';\r\nimport Button from '../../components/Button';\r\nimport '../index.scss';\r\n\r\nconst DetailTransaction = () => {\r\n  const state = useSelector((state) => state.transaction);\r\n  const history = useHistory();\r\n  const [data, setData] = useState();\r\n  let { id } = useParams();\r\n\r\n  const getData = (value) => {\r\n    let data = value.filter((val) => {\r\n      return val.id === id;\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const getBack = () => {\r\n    history.push('/');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state.transactions.length > 0) {\r\n      setData(getData(state.transactions));\r\n    } else {\r\n      getBack();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <div>\r\n          <p className=\"header\">Detail Transaksi</p>\r\n          <Header id={data[0].id} status={data[0].status} />\r\n          <Card\r\n            sender_bank={data[0].sender_bank}\r\n            beneficiary_bank={data[0].beneficiary_bank}\r\n            account_number={data[0].account_number}\r\n            beneficiary_name={data[0].beneficiary_name}\r\n            amount={formatCurrency(data[0].amount)}\r\n            unique_code={data[0].unique_code}\r\n            remark={data[0].remark}\r\n            created_at={formatDate(data[0].created_at)}\r\n          />\r\n          <Button getBack={getBack} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailTransaction;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <p>Page not found.</p>\r\n      <br />\r\n      <br />\r\n      <p\r\n        style={{ textDecoration: 'underline', cursor: 'pointer' }}\r\n        onClick={() => history.push('/')}\r\n      >\r\n        Back to Homepage\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 25px;\r\n`;\r\n\r\nexport default Container;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n// To run project on local machine, switch from HashRouter to BrowserRouter.\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport store from './redux/store';\n\nimport TransactionList from './pages/TransactionList/';\nimport DetailTransaction from './pages/DetailTransaction/';\nimport NotFound from './pages/NotFound/';\nimport Container from './components/Container';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Container>\n          <Switch>\n            <Route exact path=\"/\" component={TransactionList} />\n            <Route\n              exact\n              path=\"/transaction/:id\"\n              component={DetailTransaction}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}